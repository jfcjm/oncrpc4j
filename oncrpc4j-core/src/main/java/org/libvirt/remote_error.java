/*
 * Automatically generated by jrpcgen 1.0.7+ on 18/04/17 19:06
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 *
 * This version of jrpcgen adopted by dCache project
 * See http://www.dCache.ORG for details
 */
package org.libvirt;
import org.dcache.xdr.*;
import org.libvirt.types.remote_domain;
import org.libvirt.types.remote_network;

import java.io.IOException;

public class remote_error implements XdrAble, java.io.Serializable {
    @Override
	public String toString() {
		return "remote_error [code=" + code + ", domain=" + domain + ", message=" + message + ", level=" + level
				+ ", dom=" + dom + ", str1=" + str1 + ", str2=" + str2 + ", str3=" + str3 + ", int1=" + int1 + ", int2="
				+ int2 + ", net=" + net + "]";
	}

	protected int code;
    protected int domain;
    protected remote_string message;
    protected int level;
    protected remote_domain dom;
    protected remote_string str1;
    protected remote_string str2;
    protected remote_string str3;
    protected int int1;
    protected int int2;
    protected remote_network net;

    private static final long serialVersionUID = 753123177678868626L;

    public void setCode(int x) { this.code = x; }
    public int getCode() { return this.code; }

    public void setDomain(int x) { this.domain = x; }
    public int getDomain() { return this.domain; }

    public void setMessage(remote_string x) { this.message = x; }
    public remote_string getMessage() { return this.message; }

    public void setLevel(int x) { this.level = x; }
    public int getLevel() { return this.level; }

    public void setDom(remote_domain x) { this.dom = x; }
    public remote_domain getDom() { return this.dom; }

    public void setStr1(remote_string x) { this.str1 = x; }
    public remote_string getStr1() { return this.str1; }

    public void setStr2(remote_string x) { this.str2 = x; }
    public remote_string getStr2() { return this.str2; }

    public void setStr3(remote_string x) { this.str3 = x; }
    public remote_string getStr3() { return this.str3; }

    public void setInt1(int x) { this.int1 = x; }
    public int getInt1() { return this.int1; }

    public void setInt2(int x) { this.int2 = x; }
    public int getInt2() { return this.int2; }

    public void setNet(remote_network x) { this.net = x; }
    public remote_network getNet() { return this.net; }

    public remote_error() {
    }

    public remote_error(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        xdr.xdrEncodeInt(code);
        xdr.xdrEncodeInt(domain);
        message.xdrEncode(xdr);
        xdr.xdrEncodeInt(level);
        dom.xdrEncode(xdr);
        str1.xdrEncode(xdr);
        str2.xdrEncode(xdr);
        str3.xdrEncode(xdr);
        xdr.xdrEncodeInt(int1);
        xdr.xdrEncodeInt(int2);
        net.xdrEncode(xdr);
    }

    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        code = xdr.xdrDecodeInt();
        domain = xdr.xdrDecodeInt();
        message = new remote_string(xdr);
        level = xdr.xdrDecodeInt();
        dom = new remote_domain(xdr);
        str1 = new remote_string(xdr);
        str2 = new remote_string(xdr);
        str3 = new remote_string(xdr);
        int1 = xdr.xdrDecodeInt();
        int2 = xdr.xdrDecodeInt();
        net = new remote_network(xdr);
    }

}
// End of remote_error.java
